class Student {
    constructor(name, id) {
        this.name = name;
        this.id = id;
    }

    async getData() {
        const response = await fetch('https://run.mocky.io/v3/2380ad60-44a1-4ee2-a19a-424773ccb224');
        const data = await response.json();
        return data;
    }

    async studentById(id) {
        const data = await this.getData(); // Wait for the data
        if (data.id === id) { // Ensure the data corresponds to the correct student
            this.name = data.name;
            this.grade = data.grade;
        }
    }
}

const s = new Student("John", 1);
s.studentById(1).then(() => {
    console.log(s.name + " " + s.grade); // Now it will log the name and grade after data is fetched
});
class Student {
    constructor(name, id){
        this.name = name;
        this.id = id;
    }

    // Fetch student data and return it
    async getData(){
        const response = await fetch('https://run.mocky.io/v3/2380ad60-44a1-4ee2-a19a-424773ccb224');
        const data = await response.json();
        return data;  // return the data so it can be used later
    }

    // Find student by id
    async studentById(id){
        const data = await this.getData();
        if (data.id === id) {
            this.name = data.name;  // Assign name from fetched data
            this.grade = data.grade;  // Assign grade from fetched data
        }
    }
}

async function main() {
    const s = new Student();
    const p = new Student("rao", 1);

    // Print initial name and id
    console.log(p.name + " " + p.id);  // this will print "rao 1"

    // Fetch data for student p and print the name and grade
    await p.studentById(1);  // Ensure that studentById has finished fetching and assigning data
    console.log(p.name);  // Should print the name after it's set
    console.log(p.grade); // Should print the grade after it's set
}

// Call the main function
main();

